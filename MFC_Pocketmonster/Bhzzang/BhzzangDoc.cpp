
// BhzzangDoc.cpp : CBhzzangDoc 클래스의 구현
//

#include <conio.h>
#include "stdafx.h"
// SHARED_HANDLERS는 미리 보기, 축소판 그림 및 검색 필터 처리기를 구현하는 ATL 프로젝트에서 정의할 수 있으며
// 해당 프로젝트와 문서 코드를 공유하도록 해 줍니다.
#ifndef SHARED_HANDLERS
#include "Bhzzang.h"
#endif

#include "BhzzangDoc.h"
#include <propkey.h>

#ifdef _DEBUG
#define new DEBUG_NEW
#endif

// CBhzzangDoc

IMPLEMENT_DYNCREATE(CBhzzangDoc, CDocument)

BEGIN_MESSAGE_MAP(CBhzzangDoc, CDocument)
END_MESSAGE_MAP()


// CBhzzangDoc 생성/소멸

CBhzzangDoc::CBhzzangDoc()
{
	// TODO: 여기에 일회성 생성 코드를 추가합니다.

}

CBhzzangDoc::~CBhzzangDoc()
{
}

BOOL CBhzzangDoc::OnNewDocument()
{
	if (!CDocument::OnNewDocument())
		return FALSE;
	SystemText.RemoveAll();
	POKEDEX.RemoveAll();
	CharPos_x = 585;
	CharPos_y = 140;
	CharDirect = 1;
	STAT PIKA = { _T("피카츄"), _T("전광석화"), _T("번개"),3, 30, 30, 3, 3 };
	POKEDEX.Add(PIKA);
	COMWENDY = { _T("웬디"),0,0,10,150,150,10,0 };
	MonsterStat = { 0 };
	Select = 0;
	ShopSelect = 0;
	PKNum = 0;
	Pkbattle = 0;
	BattleStart = 0;
	Potion = 3;
	Ball = 5;
	iGold = 300;
	GUMAE = false;
	CENTER = false;
	Battle = false;
	TUTORIAL = 1;
	BOSS = false;
	ENDING = false;
	// TODO: 여기에 재초기화 코드를 추가합니다.
	// SDI 문서는 이 문서를 다시 사용합니다.

	return TRUE;
}




// CBhzzangDoc serialization

void CBhzzangDoc::Serialize(CArchive& ar)
{
	if (ar.IsStoring())
	{
		// TODO: 여기에 저장 코드를 추가합니다.
	}
	else
	{
		// TODO: 여기에 로딩 코드를 추가합니다.
	}
}

#ifdef SHARED_HANDLERS

// 축소판 그림을 지원합니다.
void CBhzzangDoc::OnDrawThumbnail(CDC& dc, LPRECT lprcBounds)
{
	// 문서의 데이터를 그리려면 이 코드를 수정하십시오.
	dc.FillSolidRect(lprcBounds, RGB(255, 255, 255));

	CString strText = _T("TODO: implement thumbnail drawing here");
	LOGFONT lf;

	CFont* pDefaultGUIFont = CFont::FromHandle((HFONT) GetStockObject(DEFAULT_GUI_FONT));
	pDefaultGUIFont->GetLogFont(&lf);
	lf.lfHeight = 36;

	CFont fontDraw;
	fontDraw.CreateFontIndirect(&lf);

	CFont* pOldFont = dc.SelectObject(&fontDraw);
	dc.DrawText(strText, lprcBounds, DT_CENTER | DT_WORDBREAK);
	dc.SelectObject(pOldFont);
}

// 검색 처리기를 지원합니다.
void CBhzzangDoc::InitializeSearchContent()
{
	CString strSearchContent;
	// 문서의 데이터에서 검색 콘텐츠를 설정합니다.
	// 콘텐츠 부분은 ";"로 구분되어야 합니다.

	// 예: strSearchContent = _T("point;rectangle;circle;ole object;");
	SetSearchContent(strSearchContent);
}

void CBhzzangDoc::SetSearchContent(const CString& value)
{
	if (value.IsEmpty())
	{
		RemoveChunk(PKEY_Search_Contents.fmtid, PKEY_Search_Contents.pid);
	}
	else
	{
		CMFCFilterChunkValueImpl *pChunk = NULL;
		ATLTRY(pChunk = new CMFCFilterChunkValueImpl);
		if (pChunk != NULL)
		{
			pChunk->SetTextValue(PKEY_Search_Contents, value, CHUNK_TEXT);
			SetChunkValue(pChunk);
		}
	}
}

#endif // SHARED_HANDLERS

// CBhzzangDoc 진단

#ifdef _DEBUG
void CBhzzangDoc::AssertValid() const
{
	CDocument::AssertValid();
}

void CBhzzangDoc::Dump(CDumpContext& dc) const
{
	CDocument::Dump(dc);
}
#endif //_DEBUG


// CBhzzangDoc 명령
